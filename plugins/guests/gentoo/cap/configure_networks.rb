require "tempfile"

require "vagrant/util/template_renderer"

module VagrantPlugins
  module GuestGentoo
    module Cap
      class ConfigureNetworks
        include Vagrant::Util

        def self.configure_networks(machine, networks)
          machine.communicate.tap do |comm|
            guestFuntoo =  machine.communicate.test("grep -i funtoo /etc/gentoo-release")
            unless guestFuntoo 
              # Remove any previous host only network additions to the interface file
              comm.sudo("sed -e '/^#VAGRANT-BEGIN/,/^#VAGRANT-END/ d' /etc/conf.d/net > /tmp/vagrant-network-interfaces")
              comm.sudo("cat /tmp/vagrant-network-interfaces > /etc/conf.d/net")
              comm.sudo("rm /tmp/vagrant-network-interfaces")
            end

            # Configure each network interface
            networks.each do |network|

              unless guestFuntoo 
                ifFile = "net.eth#{network[:interface]}"
                entry = TemplateRenderer.render("guests/gentoo/network_#{network[:type]}",
                                                :options => network)
                # Upload the entry to a temporary location
                temp = Tempfile.new("vagrant")
                temp.binmode
                temp.write(entry)
                temp.close
                comm.upload(temp.path, "/tmp/vagrant-network-entry")
                comm.sudo("ln -fs /etc/init.d/net.lo /etc/init.d/#{ifFile}")
                comm.sudo("/etc/init.d/#{ifFile} stop 2> /dev/null")
                comm.sudo("cat /tmp/vagrant-network-entry >> /etc/conf.d/net")
                comm.sudo("rm /tmp/vagrant-network-entry")
                comm.sudo("/etc/init.d/#{ifFile} start")
              else # funtoo: see http://www.funtoo.org/Funtoo_Linux_Networking
                ifFile = "netif.eth#{network[:interface]}"
                # We assume that under funtoo all interfaces are be default dhcp
                unless /dhcp/i.match(network[:type])
                  line = "denyinterfaces eth#{network[:interface]}"
                  cmd = "grep '#{line}' /etc/dhcpcd.conf; if [ $? -ne 0 ]; then echo '#{line}' >> /etc/dhcpcd.conf ;  fi"
                  comm.sudo(cmd)
                  netif_conf = "#VAGRANT-BEGIN                                                                                                                                                                                                   
# The contents below are automatically generated by Vagrant. Do not modify.
template='interface'
ipaddr='#{network[:ip]}/#{network[:netmask]}'
#VAGRANT-END
"  
                  # Upload the netif_conf to a temporary location
                  temp = Tempfile.new("vagrant")
                  temp.binmode
                  temp.write(netif_conf)
                  temp.close
                  comm.upload(temp.path, "/tmp/vagrant-#{ifFile}")
                  comm.sudo("cp /tmp/vagrant-#{ifFile} /etc/conf.d/#{ifFile}")
                  comm.sudo("chmod 0644 /etc/conf.d/#{ifFile}")
                  comm.sudo("ln -fs /etc/init.d/netif.tmpl /etc/init.d/#{ifFile}")
                  comm.sudo("/etc/init.d/#{ifFile} start")
                end
              end
            end
          end
        end
      end
    end
  end
end
