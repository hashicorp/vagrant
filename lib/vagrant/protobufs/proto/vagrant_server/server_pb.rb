# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: proto/vagrant_server/server.proto

require 'google/protobuf'

require 'google/protobuf/any_pb'
require 'google/protobuf/empty_pb'
require 'google/protobuf/timestamp_pb'
require 'google/rpc/status_pb'
require 'google/protobuf/struct_pb'
require 'protostructure_pb'
require 'plugin_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("proto/vagrant_server/server.proto", :syntax => :proto3) do
    add_message "hashicorp.vagrant.GetVersionInfoResponse" do
      optional :info, :message, 1, "hashicorp.vagrant.VersionInfo"
    end
    add_message "hashicorp.vagrant.VersionInfo" do
      optional :api, :message, 1, "hashicorp.vagrant.VersionInfo.ProtocolVersion"
      optional :entrypoint, :message, 2, "hashicorp.vagrant.VersionInfo.ProtocolVersion"
      optional :version, :string, 3
    end
    add_message "hashicorp.vagrant.VersionInfo.ProtocolVersion" do
      optional :current, :uint32, 1
      optional :minimum, :uint32, 2
    end
    add_message "hashicorp.vagrant.Vagrantfile" do
      optional :unfinalized, :message, 1, "hashicorp.vagrant.sdk.Args.Hash"
      optional :finalized, :message, 2, "hashicorp.vagrant.sdk.Args.Hash"
      optional :raw, :bytes, 3
      optional :format, :enum, 4, "hashicorp.vagrant.Vagrantfile.Format"
      optional :path, :message, 5, "hashicorp.vagrant.sdk.Args.Path"
    end
    add_enum "hashicorp.vagrant.Vagrantfile.Format" do
      value :JSON, 0
      value :HCL, 1
      value :RUBY, 2
    end
    add_message "hashicorp.vagrant.Basis" do
      optional :resource_id, :string, 1
      optional :name, :string, 2
      optional :path, :string, 3
      repeated :projects, :message, 4, "hashicorp.vagrant.sdk.Ref.Project"
      optional :metadata, :message, 5, "hashicorp.vagrant.sdk.Args.MetadataSet"
      optional :configuration, :message, 6, "hashicorp.vagrant.Vagrantfile"
      optional :remote_enabled, :bool, 100
      optional :data_source, :message, 101, "hashicorp.vagrant.Job.DataSource"
    end
    add_message "hashicorp.vagrant.Project" do
      optional :resource_id, :string, 1
      optional :name, :string, 2
      optional :path, :string, 3
      repeated :targets, :message, 4, "hashicorp.vagrant.sdk.Ref.Target"
      optional :basis, :message, 5, "hashicorp.vagrant.sdk.Ref.Basis"
      optional :metadata, :message, 6, "hashicorp.vagrant.sdk.Args.MetadataSet"
      optional :configuration, :message, 7, "hashicorp.vagrant.Vagrantfile"
      optional :remote_enabled, :bool, 100
      optional :data_source, :message, 101, "hashicorp.vagrant.Job.DataSource"
    end
    add_message "hashicorp.vagrant.Box" do
      optional :id, :string, 1
      optional :provider, :string, 2
      optional :version, :string, 3
      optional :directory, :string, 4
      optional :metadata, :message, 5, "google.protobuf.Struct"
      optional :metadata_url, :string, 6
      optional :name, :string, 7
      optional :last_update, :message, 8, "google.protobuf.Timestamp"
    end
    add_message "hashicorp.vagrant.Target" do
      optional :resource_id, :string, 1
      optional :datadir, :message, 2, "hashicorp.vagrant.sdk.Args.DataDir.Target"
      optional :name, :string, 3
      optional :project, :message, 4, "hashicorp.vagrant.sdk.Ref.Project"
      optional :state, :enum, 5, "hashicorp.vagrant.Operation.PhysicalState"
      repeated :subtargets, :message, 6, "hashicorp.vagrant.Target"
      optional :parent, :message, 7, "hashicorp.vagrant.Target"
      optional :uuid, :string, 8
      optional :metadata, :message, 9, "hashicorp.vagrant.sdk.Args.MetadataSet"
      optional :configuration, :message, 10, "hashicorp.vagrant.sdk.Args.ConfigData"
      optional :record, :message, 11, "google.protobuf.Any"
      optional :provider, :string, 12
      optional :remote_enabled, :bool, 100
      optional :data_source, :message, 101, "hashicorp.vagrant.Job.DataSource"
    end
    add_message "hashicorp.vagrant.Target.Machine" do
      optional :id, :string, 1
      optional :box, :message, 7, "hashicorp.vagrant.Box"
      optional :uid, :string, 9
      optional :state, :message, 10, "hashicorp.vagrant.sdk.Args.Target.Machine.State"
    end
    add_message "hashicorp.vagrant.Ref" do
    end
    add_message "hashicorp.vagrant.Ref.Component" do
      optional :type, :enum, 1, "hashicorp.vagrant.Component.Type"
      optional :name, :string, 2
    end
    add_message "hashicorp.vagrant.Ref.Operation" do
      oneof :target do
        optional :id, :string, 1
        optional :target_sequence, :message, 2, "hashicorp.vagrant.Ref.TargetOperationSeq"
        optional :project_sequence, :message, 3, "hashicorp.vagrant.Ref.ProjectOperationSeq"
        optional :basis_sequence, :message, 4, "hashicorp.vagrant.Ref.BasisOperationSeq"
      end
    end
    add_message "hashicorp.vagrant.Ref.TargetOperationSeq" do
      optional :target, :message, 1, "hashicorp.vagrant.sdk.Ref.Target"
      optional :number, :uint64, 2
    end
    add_message "hashicorp.vagrant.Ref.ProjectOperationSeq" do
      optional :project, :message, 1, "hashicorp.vagrant.sdk.Ref.Project"
      optional :number, :uint64, 2
    end
    add_message "hashicorp.vagrant.Ref.BasisOperationSeq" do
      optional :basis, :message, 1, "hashicorp.vagrant.sdk.Ref.Basis"
      optional :number, :uint64, 2
    end
    add_message "hashicorp.vagrant.Ref.Runner" do
      oneof :target do
        optional :any, :message, 1, "hashicorp.vagrant.Ref.RunnerAny"
        optional :id, :message, 2, "hashicorp.vagrant.Ref.RunnerId"
      end
    end
    add_message "hashicorp.vagrant.Ref.RunnerId" do
      optional :id, :string, 1
    end
    add_message "hashicorp.vagrant.Ref.RunnerAny" do
    end
    add_message "hashicorp.vagrant.Ref.Vagrantfile" do
      optional :resource_id, :string, 1
    end
    add_message "hashicorp.vagrant.Component" do
      optional :type, :enum, 1, "hashicorp.vagrant.Component.Type"
      optional :name, :string, 2
      optional :server_addr, :string, 3
    end
    add_enum "hashicorp.vagrant.Component.Type" do
      value :UNKNOWN, 0
      value :COMMAND, 1
      value :COMMUNICATOR, 2
      value :GUEST, 3
      value :HOST, 4
      value :PROVIDER, 5
      value :PROVISIONER, 6
      value :SYNCEDFOLDER, 7
      value :AUTHENTICATOR, 8
      value :LOGPLATFORM, 9
      value :LOGVIEWER, 10
      value :MAPPER, 11
      value :CONFIG, 12
      value :PLUGININFO, 13
      value :PUSH, 14
    end
    add_message "hashicorp.vagrant.Status" do
      optional :state, :enum, 1, "hashicorp.vagrant.Status.State"
      optional :details, :string, 2
      optional :error, :message, 3, "google.rpc.Status"
      optional :start_time, :message, 4, "google.protobuf.Timestamp"
      optional :complete_time, :message, 5, "google.protobuf.Timestamp"
    end
    add_enum "hashicorp.vagrant.Status.State" do
      value :UNKNOWN, 0
      value :RUNNING, 1
      value :SUCCESS, 2
      value :ERROR, 3
    end
    add_message "hashicorp.vagrant.StatusFilter" do
      repeated :filters, :message, 1, "hashicorp.vagrant.StatusFilter.Filter"
    end
    add_message "hashicorp.vagrant.StatusFilter.Filter" do
      oneof :filter do
        optional :state, :enum, 2, "hashicorp.vagrant.Status.State"
      end
    end
    add_message "hashicorp.vagrant.Operation" do
    end
    add_enum "hashicorp.vagrant.Operation.PhysicalState" do
      value :UNKNOWN, 0
      value :PENDING, 1
      value :CREATED, 2
      value :DESTROYED, 3
      value :HALTED, 4
      value :NOT_CREATED, 5
    end
    add_message "hashicorp.vagrant.OperationOrder" do
      optional :order, :enum, 2, "hashicorp.vagrant.OperationOrder.Order"
      optional :desc, :bool, 3
      optional :limit, :uint32, 4
    end
    add_enum "hashicorp.vagrant.OperationOrder.Order" do
      value :UNSET, 0
      value :START_TIME, 1
      value :COMPLETE_TIME, 2
    end
    add_message "hashicorp.vagrant.QueueJobRequest" do
      optional :job, :message, 1, "hashicorp.vagrant.Job"
      optional :expires_in, :string, 2
    end
    add_message "hashicorp.vagrant.QueueJobResponse" do
      optional :job_id, :string, 1
    end
    add_message "hashicorp.vagrant.CancelJobRequest" do
      optional :job_id, :string, 1
    end
    add_message "hashicorp.vagrant.ValidateJobRequest" do
      optional :job, :message, 1, "hashicorp.vagrant.Job"
      optional :disable_assign, :bool, 2
    end
    add_message "hashicorp.vagrant.ValidateJobResponse" do
      optional :valid, :bool, 1
      optional :validation_error, :message, 2, "google.rpc.Status"
      optional :assignable, :bool, 3
    end
    add_message "hashicorp.vagrant.Job" do
      optional :id, :string, 1
      optional :basis, :message, 2, "hashicorp.vagrant.sdk.Ref.Basis"
      optional :project, :message, 3, "hashicorp.vagrant.sdk.Ref.Project"
      optional :target, :message, 4, "hashicorp.vagrant.sdk.Ref.Target"
      optional :target_runner, :message, 5, "hashicorp.vagrant.Ref.Runner"
      map :labels, :string, :string, 6
      optional :data_source, :message, 7, "hashicorp.vagrant.Job.DataSource"
      map :data_source_overrides, :string, :string, 8
      optional :state, :enum, 100, "hashicorp.vagrant.Job.State"
      optional :assigned_runner, :message, 101, "hashicorp.vagrant.Ref.RunnerId"
      optional :queue_time, :message, 102, "google.protobuf.Timestamp"
      optional :assign_time, :message, 103, "google.protobuf.Timestamp"
      optional :ack_time, :message, 104, "google.protobuf.Timestamp"
      optional :complete_time, :message, 105, "google.protobuf.Timestamp"
      optional :error, :message, 106, "google.rpc.Status"
      optional :result, :message, 107, "hashicorp.vagrant.Job.Result"
      optional :cancel_time, :message, 108, "google.protobuf.Timestamp"
      optional :expire_time, :message, 109, "google.protobuf.Timestamp"
      oneof :operation do
        optional :noop, :message, 50, "hashicorp.vagrant.Job.Noop"
        optional :auth, :message, 51, "hashicorp.vagrant.Job.AuthOp"
        optional :docs, :message, 52, "hashicorp.vagrant.Job.DocsOp"
        optional :validate, :message, 53, "hashicorp.vagrant.Job.ValidateOp"
        optional :run, :message, 54, "hashicorp.vagrant.Job.RunOp"
        optional :init, :message, 55, "hashicorp.vagrant.Job.InitOp"
      end
    end
    add_message "hashicorp.vagrant.Job.Result" do
      optional :auth, :message, 1, "hashicorp.vagrant.Job.AuthResult"
      optional :docs, :message, 2, "hashicorp.vagrant.Job.DocsResult"
      optional :validate, :message, 3, "hashicorp.vagrant.Job.ValidateResult"
      optional :init, :message, 4, "hashicorp.vagrant.Job.InitResult"
      optional :run, :message, 5, "hashicorp.vagrant.Job.RunResult"
    end
    add_message "hashicorp.vagrant.Job.DataSource" do
      oneof :source do
        optional :local, :message, 1, "hashicorp.vagrant.Job.Local"
        optional :git, :message, 2, "hashicorp.vagrant.Job.Git"
      end
    end
    add_message "hashicorp.vagrant.Job.Local" do
    end
    add_message "hashicorp.vagrant.Job.Git" do
      optional :url, :string, 1
      optional :ref, :string, 2
      optional :path, :string, 3
    end
    add_message "hashicorp.vagrant.Job.Noop" do
    end
    add_message "hashicorp.vagrant.Job.ValidateOp" do
    end
    add_message "hashicorp.vagrant.Job.ValidateResult" do
    end
    add_message "hashicorp.vagrant.Job.InitOp" do
    end
    add_message "hashicorp.vagrant.Job.InitResult" do
      repeated :actions, :message, 1, "hashicorp.vagrant.Job.Action"
      repeated :commands, :message, 2, "hashicorp.vagrant.sdk.Command.CommandInfo"
      repeated :hooks, :message, 3, "hashicorp.vagrant.Job.Hook"
    end
    add_message "hashicorp.vagrant.Job.Action" do
      optional :name, :string, 1
      optional :source, :string, 2
    end
    add_message "hashicorp.vagrant.Job.Hook" do
      optional :target_action_name, :string, 1
      optional :location, :enum, 2, "hashicorp.vagrant.Job.Hook.Location"
      optional :action_name, :string, 3
      optional :source, :string, 4
    end
    add_enum "hashicorp.vagrant.Job.Hook.Location" do
      value :BEFORE, 0
      value :AFTER, 1
    end
    add_message "hashicorp.vagrant.Job.RunOp" do
      optional :task, :message, 1, "hashicorp.vagrant.Task"
    end
    add_message "hashicorp.vagrant.Job.RunResult" do
      optional :task, :message, 1, "hashicorp.vagrant.Task"
      optional :run_result, :bool, 2
      optional :run_error, :message, 3, "google.rpc.Status"
      optional :exit_code, :sint32, 4
    end
    add_message "hashicorp.vagrant.Job.AuthOp" do
      optional :check_only, :bool, 1
      optional :component, :message, 2, "hashicorp.vagrant.Ref.Component"
    end
    add_message "hashicorp.vagrant.Job.AuthResult" do
      repeated :results, :message, 1, "hashicorp.vagrant.Job.AuthResult.Result"
    end
    add_message "hashicorp.vagrant.Job.AuthResult.Result" do
      optional :component, :message, 1, "hashicorp.vagrant.Component"
      optional :check_result, :bool, 2
      optional :check_error, :message, 3, "google.rpc.Status"
      optional :auth_completed, :bool, 4
      optional :auth_error, :message, 5, "google.rpc.Status"
      optional :auth_supported, :bool, 6
    end
    add_message "hashicorp.vagrant.Job.DocsOp" do
    end
    add_message "hashicorp.vagrant.Job.DocsResult" do
      repeated :results, :message, 1, "hashicorp.vagrant.Job.DocsResult.Result"
    end
    add_message "hashicorp.vagrant.Job.DocsResult.Result" do
      optional :component, :message, 1, "hashicorp.vagrant.Component"
      optional :docs, :message, 2, "hashicorp.vagrant.Documentation"
    end
    add_enum "hashicorp.vagrant.Job.State" do
      value :UNKNOWN, 0
      value :QUEUED, 1
      value :WAITING, 2
      value :RUNNING, 3
      value :ERROR, 4
      value :SUCCESS, 5
    end
    add_message "hashicorp.vagrant.Documentation" do
      optional :description, :string, 1
      optional :example, :string, 2
      optional :input, :string, 3
      optional :output, :string, 4
      map :fields, :string, :message, 5, "hashicorp.vagrant.Documentation.Field"
      repeated :mappers, :message, 6, "hashicorp.vagrant.Documentation.Mapper"
    end
    add_message "hashicorp.vagrant.Documentation.Field" do
      optional :name, :string, 1
      optional :synopsis, :string, 2
      optional :summary, :string, 3
      optional :optional, :bool, 4
      optional :env_var, :string, 5
      optional :type, :string, 6
      optional :default, :string, 7
    end
    add_message "hashicorp.vagrant.Documentation.Mapper" do
      optional :input, :string, 1
      optional :output, :string, 2
      optional :description, :string, 3
    end
    add_message "hashicorp.vagrant.GetJobRequest" do
      optional :job_id, :string, 1
    end
    add_message "hashicorp.vagrant.ListJobsRequest" do
    end
    add_message "hashicorp.vagrant.ListJobsResponse" do
      repeated :jobs, :message, 1, "hashicorp.vagrant.Job"
    end
    add_message "hashicorp.vagrant.GetJobStreamRequest" do
      optional :job_id, :string, 1
    end
    add_message "hashicorp.vagrant.GetJobStreamResponse" do
      oneof :event do
        optional :open, :message, 1, "hashicorp.vagrant.GetJobStreamResponse.Open"
        optional :state, :message, 2, "hashicorp.vagrant.GetJobStreamResponse.State"
        optional :terminal, :message, 3, "hashicorp.vagrant.GetJobStreamResponse.Terminal"
        optional :error, :message, 4, "hashicorp.vagrant.GetJobStreamResponse.Error"
        optional :complete, :message, 5, "hashicorp.vagrant.GetJobStreamResponse.Complete"
      end
    end
    add_message "hashicorp.vagrant.GetJobStreamResponse.Open" do
    end
    add_message "hashicorp.vagrant.GetJobStreamResponse.State" do
      optional :previous, :enum, 1, "hashicorp.vagrant.Job.State"
      optional :current, :enum, 2, "hashicorp.vagrant.Job.State"
      optional :job, :message, 3, "hashicorp.vagrant.Job"
      optional :canceling, :bool, 4
    end
    add_message "hashicorp.vagrant.GetJobStreamResponse.Terminal" do
      repeated :events, :message, 1, "hashicorp.vagrant.GetJobStreamResponse.Terminal.Event"
      optional :buffered, :bool, 2
    end
    add_message "hashicorp.vagrant.GetJobStreamResponse.Terminal.Event" do
      optional :timestamp, :message, 1, "google.protobuf.Timestamp"
      oneof :event do
        optional :line, :message, 2, "hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.Line"
        optional :status, :message, 3, "hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.Status"
        optional :named_values, :message, 4, "hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.NamedValues"
        optional :raw, :message, 5, "hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.Raw"
        optional :table, :message, 6, "hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.Table"
        optional :step_group, :message, 7, "hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.StepGroup"
        optional :step, :message, 8, "hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.Step"
      end
    end
    add_message "hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.Status" do
      optional :status, :string, 1
      optional :msg, :string, 2
      optional :step, :bool, 3
    end
    add_message "hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.Line" do
      optional :msg, :string, 1
      optional :style, :string, 2
      optional :disable_new_line, :bool, 3
      optional :color, :string, 4
    end
    add_message "hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.Raw" do
      optional :data, :bytes, 1
      optional :stderr, :bool, 2
    end
    add_message "hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.NamedValue" do
      optional :name, :string, 1
      optional :value, :string, 2
    end
    add_message "hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.NamedValues" do
      repeated :values, :message, 1, "hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.NamedValue"
    end
    add_message "hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.TableEntry" do
      optional :value, :string, 1
      optional :color, :string, 2
    end
    add_message "hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.TableRow" do
      repeated :entries, :message, 1, "hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.TableEntry"
    end
    add_message "hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.Table" do
      repeated :headers, :string, 1
      repeated :rows, :message, 2, "hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.TableRow"
    end
    add_message "hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.StepGroup" do
      optional :close, :bool, 1
    end
    add_message "hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.Step" do
      optional :id, :int32, 1
      optional :close, :bool, 2
      optional :msg, :string, 3
      optional :status, :string, 4
      optional :output, :bytes, 5
    end
    add_message "hashicorp.vagrant.GetJobStreamResponse.Error" do
      optional :error, :message, 1, "google.rpc.Status"
    end
    add_message "hashicorp.vagrant.GetJobStreamResponse.Complete" do
      optional :error, :message, 1, "google.rpc.Status"
      optional :result, :message, 2, "hashicorp.vagrant.Job.Result"
    end
    add_message "hashicorp.vagrant.Runner" do
      optional :id, :string, 1
      optional :by_id_only, :bool, 2
      repeated :components, :message, 3, "hashicorp.vagrant.Component"
    end
    add_message "hashicorp.vagrant.RunnerConfigRequest" do
      oneof :event do
        optional :open, :message, 1, "hashicorp.vagrant.RunnerConfigRequest.Open"
      end
    end
    add_message "hashicorp.vagrant.RunnerConfigRequest.Open" do
      optional :runner, :message, 1, "hashicorp.vagrant.Runner"
    end
    add_message "hashicorp.vagrant.RunnerConfigResponse" do
      optional :config, :message, 2, "hashicorp.vagrant.RunnerConfig"
    end
    add_message "hashicorp.vagrant.RunnerConfig" do
      repeated :config_vars, :message, 1, "hashicorp.vagrant.ConfigVar"
    end
    add_message "hashicorp.vagrant.RunnerJobStreamRequest" do
      oneof :event do
        optional :request, :message, 1, "hashicorp.vagrant.RunnerJobStreamRequest.Request"
        optional :ack, :message, 2, "hashicorp.vagrant.RunnerJobStreamRequest.Ack"
        optional :complete, :message, 3, "hashicorp.vagrant.RunnerJobStreamRequest.Complete"
        optional :error, :message, 4, "hashicorp.vagrant.RunnerJobStreamRequest.Error"
        optional :terminal, :message, 5, "hashicorp.vagrant.GetJobStreamResponse.Terminal"
        optional :heartbeat, :message, 6, "hashicorp.vagrant.RunnerJobStreamRequest.Heartbeat"
      end
    end
    add_message "hashicorp.vagrant.RunnerJobStreamRequest.Request" do
      optional :runner_id, :string, 1
    end
    add_message "hashicorp.vagrant.RunnerJobStreamRequest.Ack" do
    end
    add_message "hashicorp.vagrant.RunnerJobStreamRequest.Complete" do
      optional :result, :message, 1, "hashicorp.vagrant.Job.Result"
    end
    add_message "hashicorp.vagrant.RunnerJobStreamRequest.Error" do
      optional :error, :message, 1, "google.rpc.Status"
    end
    add_message "hashicorp.vagrant.RunnerJobStreamRequest.Heartbeat" do
    end
    add_message "hashicorp.vagrant.RunnerJobStreamResponse" do
      oneof :event do
        optional :assignment, :message, 1, "hashicorp.vagrant.RunnerJobStreamResponse.JobAssignment"
        optional :cancel, :message, 2, "hashicorp.vagrant.RunnerJobStreamResponse.JobCancel"
      end
    end
    add_message "hashicorp.vagrant.RunnerJobStreamResponse.JobAssignment" do
      optional :job, :message, 1, "hashicorp.vagrant.Job"
    end
    add_message "hashicorp.vagrant.RunnerJobStreamResponse.JobCancel" do
      optional :force, :bool, 1
    end
    add_message "hashicorp.vagrant.RunnerGetDeploymentConfigRequest" do
    end
    add_message "hashicorp.vagrant.RunnerGetDeploymentConfigResponse" do
      optional :server_addr, :string, 1
      optional :server_tls, :bool, 2
      optional :server_tls_skip_verify, :bool, 3
    end
    add_message "hashicorp.vagrant.GetRunnerRequest" do
      optional :runner_id, :string, 1
    end
    add_message "hashicorp.vagrant.SetServerConfigRequest" do
      optional :config, :message, 1, "hashicorp.vagrant.ServerConfig"
    end
    add_message "hashicorp.vagrant.GetServerConfigResponse" do
      optional :config, :message, 1, "hashicorp.vagrant.ServerConfig"
    end
    add_message "hashicorp.vagrant.ServerConfig" do
      repeated :advertise_addrs, :message, 1, "hashicorp.vagrant.ServerConfig.AdvertiseAddr"
    end
    add_message "hashicorp.vagrant.ServerConfig.AdvertiseAddr" do
      optional :addr, :string, 1
      optional :tls, :bool, 2
      optional :tls_skip_verify, :bool, 3
    end
    add_message "hashicorp.vagrant.UpsertBasisRequest" do
      optional :basis, :message, 1, "hashicorp.vagrant.Basis"
    end
    add_message "hashicorp.vagrant.UpsertBasisResponse" do
      optional :basis, :message, 1, "hashicorp.vagrant.Basis"
    end
    add_message "hashicorp.vagrant.GetBasisRequest" do
      optional :basis, :message, 1, "hashicorp.vagrant.sdk.Ref.Basis"
    end
    add_message "hashicorp.vagrant.GetBasisResponse" do
      optional :basis, :message, 1, "hashicorp.vagrant.Basis"
    end
    add_message "hashicorp.vagrant.FindBasisRequest" do
      optional :basis, :message, 1, "hashicorp.vagrant.Basis"
    end
    add_message "hashicorp.vagrant.FindBasisResponse" do
      optional :basis, :message, 2, "hashicorp.vagrant.Basis"
    end
    add_message "hashicorp.vagrant.ListBasisResponse" do
      repeated :basis, :message, 1, "hashicorp.vagrant.sdk.Ref.Basis"
    end
    add_message "hashicorp.vagrant.UpsertProjectRequest" do
      optional :project, :message, 1, "hashicorp.vagrant.Project"
    end
    add_message "hashicorp.vagrant.UpsertProjectResponse" do
      optional :project, :message, 1, "hashicorp.vagrant.Project"
    end
    add_message "hashicorp.vagrant.GetProjectRequest" do
      optional :project, :message, 1, "hashicorp.vagrant.sdk.Ref.Project"
    end
    add_message "hashicorp.vagrant.GetProjectResponse" do
      optional :project, :message, 1, "hashicorp.vagrant.Project"
    end
    add_message "hashicorp.vagrant.FindProjectRequest" do
      optional :project, :message, 1, "hashicorp.vagrant.Project"
    end
    add_message "hashicorp.vagrant.FindProjectResponse" do
      optional :project, :message, 2, "hashicorp.vagrant.Project"
    end
    add_message "hashicorp.vagrant.ListProjectsResponse" do
      repeated :projects, :message, 1, "hashicorp.vagrant.sdk.Ref.Project"
    end
    add_message "hashicorp.vagrant.UpsertTargetRequest" do
      optional :project, :message, 1, "hashicorp.vagrant.sdk.Ref.Project"
      optional :target, :message, 2, "hashicorp.vagrant.Target"
    end
    add_message "hashicorp.vagrant.UpsertTargetResponse" do
      optional :target, :message, 1, "hashicorp.vagrant.Target"
    end
    add_message "hashicorp.vagrant.DeleteTargetRequest" do
      optional :project, :message, 1, "hashicorp.vagrant.sdk.Ref.Project"
      optional :target, :message, 2, "hashicorp.vagrant.sdk.Ref.Target"
    end
    add_message "hashicorp.vagrant.GetTargetRequest" do
      optional :project, :message, 1, "hashicorp.vagrant.sdk.Ref.Project"
      optional :target, :message, 2, "hashicorp.vagrant.sdk.Ref.Target"
    end
    add_message "hashicorp.vagrant.GetTargetResponse" do
      optional :target, :message, 1, "hashicorp.vagrant.Target"
    end
    add_message "hashicorp.vagrant.FindTargetRequest" do
      optional :target, :message, 1, "hashicorp.vagrant.Target"
    end
    add_message "hashicorp.vagrant.FindTargetResponse" do
      optional :target, :message, 2, "hashicorp.vagrant.Target"
    end
    add_message "hashicorp.vagrant.ListTargetsResponse" do
      repeated :targets, :message, 1, "hashicorp.vagrant.sdk.Ref.Target"
    end
    add_message "hashicorp.vagrant.UpsertBoxRequest" do
      optional :box, :message, 1, "hashicorp.vagrant.Box"
    end
    add_message "hashicorp.vagrant.UpsertBoxResponse" do
      optional :box, :message, 1, "hashicorp.vagrant.Box"
    end
    add_message "hashicorp.vagrant.DeleteBoxRequest" do
      optional :box, :message, 1, "hashicorp.vagrant.sdk.Ref.Box"
    end
    add_message "hashicorp.vagrant.GetBoxRequest" do
      optional :box, :message, 2, "hashicorp.vagrant.sdk.Ref.Box"
    end
    add_message "hashicorp.vagrant.GetBoxResponse" do
      optional :box, :message, 1, "hashicorp.vagrant.Box"
    end
    add_message "hashicorp.vagrant.ListBoxesResponse" do
      repeated :boxes, :message, 1, "hashicorp.vagrant.sdk.Ref.Box"
    end
    add_message "hashicorp.vagrant.FindBoxRequest" do
      optional :box, :message, 2, "hashicorp.vagrant.sdk.Ref.Box"
    end
    add_message "hashicorp.vagrant.FindBoxResponse" do
      optional :box, :message, 1, "hashicorp.vagrant.Box"
    end
    add_message "hashicorp.vagrant.GetLogStreamRequest" do
      optional :limit_backlog, :int32, 4
      oneof :scope do
        optional :basis, :message, 1, "hashicorp.vagrant.sdk.Ref.Basis"
        optional :project, :message, 2, "hashicorp.vagrant.sdk.Ref.Project"
        optional :target, :message, 3, "hashicorp.vagrant.sdk.Ref.Target"
      end
    end
    add_message "hashicorp.vagrant.LogBatch" do
      optional :deployment_id, :string, 1
      optional :instance_id, :string, 2
      repeated :lines, :message, 3, "hashicorp.vagrant.LogBatch.Entry"
    end
    add_message "hashicorp.vagrant.LogBatch.Entry" do
      optional :timestamp, :message, 1, "google.protobuf.Timestamp"
      optional :line, :string, 2
    end
    add_message "hashicorp.vagrant.ConfigVar" do
      optional :name, :string, 1
      optional :value, :string, 2
      oneof :scope do
        optional :target, :message, 3, "hashicorp.vagrant.sdk.Ref.Target"
        optional :project, :message, 4, "hashicorp.vagrant.sdk.Ref.Project"
        optional :runner, :message, 5, "hashicorp.vagrant.Ref.Runner"
      end
    end
    add_message "hashicorp.vagrant.ConfigSetRequest" do
      repeated :variables, :message, 1, "hashicorp.vagrant.ConfigVar"
    end
    add_message "hashicorp.vagrant.ConfigSetResponse" do
    end
    add_message "hashicorp.vagrant.ConfigGetRequest" do
      optional :prefix, :string, 1
      oneof :scope do
        optional :target, :message, 2, "hashicorp.vagrant.sdk.Ref.Target"
        optional :project, :message, 3, "hashicorp.vagrant.sdk.Ref.Project"
        optional :runner, :message, 4, "hashicorp.vagrant.Ref.RunnerId"
      end
    end
    add_message "hashicorp.vagrant.ConfigGetResponse" do
      repeated :variables, :message, 1, "hashicorp.vagrant.ConfigVar"
    end
    add_message "hashicorp.vagrant.ExecStreamRequest" do
      oneof :event do
        optional :start, :message, 1, "hashicorp.vagrant.ExecStreamRequest.Start"
        optional :input, :message, 2, "hashicorp.vagrant.ExecStreamRequest.Input"
        optional :winch, :message, 3, "hashicorp.vagrant.ExecStreamRequest.WindowSize"
      end
    end
    add_message "hashicorp.vagrant.ExecStreamRequest.Start" do
      optional :deployment_id, :string, 1
      repeated :args, :string, 2
      optional :pty, :message, 3, "hashicorp.vagrant.ExecStreamRequest.PTY"
    end
    add_message "hashicorp.vagrant.ExecStreamRequest.Input" do
      optional :data, :bytes, 1
    end
    add_message "hashicorp.vagrant.ExecStreamRequest.PTY" do
      optional :enable, :bool, 1
      optional :term, :string, 2
      optional :window_size, :message, 3, "hashicorp.vagrant.ExecStreamRequest.WindowSize"
    end
    add_message "hashicorp.vagrant.ExecStreamRequest.WindowSize" do
      optional :rows, :int32, 1
      optional :cols, :int32, 2
      optional :width, :int32, 3
      optional :height, :int32, 4
    end
    add_message "hashicorp.vagrant.ExecStreamResponse" do
      oneof :event do
        optional :open, :message, 3, "hashicorp.vagrant.ExecStreamResponse.Open"
        optional :output, :message, 1, "hashicorp.vagrant.ExecStreamResponse.Output"
        optional :exit, :message, 2, "hashicorp.vagrant.ExecStreamResponse.Exit"
      end
    end
    add_message "hashicorp.vagrant.ExecStreamResponse.Open" do
    end
    add_message "hashicorp.vagrant.ExecStreamResponse.Exit" do
      optional :code, :int32, 1
    end
    add_message "hashicorp.vagrant.ExecStreamResponse.Output" do
      optional :channel, :enum, 1, "hashicorp.vagrant.ExecStreamResponse.Output.Channel"
      optional :data, :bytes, 2
    end
    add_enum "hashicorp.vagrant.ExecStreamResponse.Output.Channel" do
      value :UNKNOWN, 0
      value :STDOUT, 1
      value :STDERR, 2
    end
    add_message "hashicorp.vagrant.EntrypointConfigRequest" do
      optional :deployment_id, :string, 1
      optional :instance_id, :string, 2
    end
    add_message "hashicorp.vagrant.EntrypointConfigResponse" do
      optional :config, :message, 2, "hashicorp.vagrant.EntrypointConfig"
    end
    add_message "hashicorp.vagrant.EntrypointConfig" do
      repeated :exec, :message, 1, "hashicorp.vagrant.EntrypointConfig.Exec"
      repeated :env_vars, :message, 2, "hashicorp.vagrant.ConfigVar"
      optional :url_service, :message, 3, "hashicorp.vagrant.EntrypointConfig.URLService"
    end
    add_message "hashicorp.vagrant.EntrypointConfig.Exec" do
      optional :index, :int64, 1
      repeated :args, :string, 2
      optional :pty, :message, 3, "hashicorp.vagrant.ExecStreamRequest.PTY"
    end
    add_message "hashicorp.vagrant.EntrypointConfig.URLService" do
      optional :control_addr, :string, 1
      optional :token, :string, 2
      optional :labels, :string, 3
    end
    add_message "hashicorp.vagrant.EntrypointLogBatch" do
      optional :instance_id, :string, 1
      repeated :lines, :message, 2, "hashicorp.vagrant.LogBatch.Entry"
    end
    add_message "hashicorp.vagrant.EntrypointExecRequest" do
      oneof :event do
        optional :open, :message, 1, "hashicorp.vagrant.EntrypointExecRequest.Open"
        optional :exit, :message, 2, "hashicorp.vagrant.EntrypointExecRequest.Exit"
        optional :output, :message, 3, "hashicorp.vagrant.EntrypointExecRequest.Output"
        optional :error, :message, 4, "hashicorp.vagrant.EntrypointExecRequest.Error"
      end
    end
    add_message "hashicorp.vagrant.EntrypointExecRequest.Open" do
      optional :instance_id, :string, 1
      optional :index, :int64, 2
    end
    add_message "hashicorp.vagrant.EntrypointExecRequest.Exit" do
      optional :code, :int32, 1
    end
    add_message "hashicorp.vagrant.EntrypointExecRequest.Output" do
      optional :channel, :enum, 1, "hashicorp.vagrant.EntrypointExecRequest.Output.Channel"
      optional :data, :bytes, 2
    end
    add_enum "hashicorp.vagrant.EntrypointExecRequest.Output.Channel" do
      value :UNKNOWN, 0
      value :STDOUT, 1
      value :STDERR, 2
    end
    add_message "hashicorp.vagrant.EntrypointExecRequest.Error" do
      optional :error, :message, 1, "google.rpc.Status"
    end
    add_message "hashicorp.vagrant.EntrypointExecResponse" do
      oneof :event do
        optional :input, :bytes, 1
        optional :winch, :message, 2, "hashicorp.vagrant.ExecStreamRequest.WindowSize"
        optional :opened, :bool, 3
      end
    end
    add_message "hashicorp.vagrant.TokenTransport" do
      optional :body, :bytes, 1
      optional :signature, :bytes, 2
      optional :key_id, :string, 3
      map :metadata, :string, :string, 4
    end
    add_message "hashicorp.vagrant.Token" do
      optional :user, :string, 1
      optional :token_id, :bytes, 2
      optional :valid_until, :message, 3, "google.protobuf.Timestamp"
      optional :login, :bool, 4
      optional :invite, :bool, 5
      optional :entrypoint, :message, 6, "hashicorp.vagrant.Token.Entrypoint"
    end
    add_message "hashicorp.vagrant.Token.Entrypoint" do
      optional :deployment_id, :string, 1
    end
    add_message "hashicorp.vagrant.HMACKey" do
      optional :id, :string, 1
      optional :key, :bytes, 2
    end
    add_message "hashicorp.vagrant.InviteTokenRequest" do
      optional :duration, :string, 1
      optional :entrypoint, :message, 2, "hashicorp.vagrant.Token.Entrypoint"
    end
    add_message "hashicorp.vagrant.NewTokenResponse" do
      optional :token, :string, 1
    end
    add_message "hashicorp.vagrant.ConvertInviteTokenRequest" do
      optional :token, :string, 1
    end
    add_message "hashicorp.vagrant.CreateSnapshotResponse" do
      oneof :event do
        optional :open, :message, 1, "hashicorp.vagrant.CreateSnapshotResponse.Open"
        optional :chunk, :bytes, 2
      end
    end
    add_message "hashicorp.vagrant.CreateSnapshotResponse.Open" do
    end
    add_message "hashicorp.vagrant.RestoreSnapshotRequest" do
      oneof :event do
        optional :open, :message, 1, "hashicorp.vagrant.RestoreSnapshotRequest.Open"
        optional :chunk, :bytes, 2
      end
    end
    add_message "hashicorp.vagrant.RestoreSnapshotRequest.Open" do
      optional :exit, :bool, 1
    end
    add_message "hashicorp.vagrant.Snapshot" do
    end
    add_message "hashicorp.vagrant.Snapshot.Header" do
      optional :version, :message, 1, "hashicorp.vagrant.VersionInfo"
      optional :format, :enum, 2, "hashicorp.vagrant.Snapshot.Header.Format"
    end
    add_enum "hashicorp.vagrant.Snapshot.Header.Format" do
      value :UNKNOWN, 0
      value :BOLT, 1
    end
    add_message "hashicorp.vagrant.Snapshot.Trailer" do
      oneof :checksum do
        optional :sha256, :string, 1
      end
    end
    add_message "hashicorp.vagrant.Snapshot.BoltChunk" do
      optional :bucket, :string, 1
      map :items, :string, :bytes, 2
      optional :final, :bool, 3
    end
    add_message "hashicorp.vagrant.UpsertTaskRequest" do
      optional :task, :message, 1, "hashicorp.vagrant.Task"
    end
    add_message "hashicorp.vagrant.UpsertTaskResponse" do
      optional :task, :message, 1, "hashicorp.vagrant.Task"
    end
    add_message "hashicorp.vagrant.GetLatestTaskRequest" do
      oneof :scope do
        optional :target, :message, 1, "hashicorp.vagrant.sdk.Ref.Target"
        optional :project, :message, 2, "hashicorp.vagrant.sdk.Ref.Project"
        optional :basis, :message, 3, "hashicorp.vagrant.sdk.Ref.Basis"
      end
    end
    add_message "hashicorp.vagrant.ListTasksRequest" do
      repeated :status, :message, 4, "hashicorp.vagrant.StatusFilter"
      optional :physical_state, :enum, 5, "hashicorp.vagrant.Operation.PhysicalState"
      optional :order, :message, 6, "hashicorp.vagrant.OperationOrder"
      oneof :scope do
        optional :target, :message, 1, "hashicorp.vagrant.sdk.Ref.Target"
        optional :project, :message, 2, "hashicorp.vagrant.sdk.Ref.Project"
        optional :basis, :message, 3, "hashicorp.vagrant.sdk.Ref.Basis"
      end
    end
    add_message "hashicorp.vagrant.ListTasksResponse" do
      repeated :tasks, :message, 1, "hashicorp.vagrant.Task"
    end
    add_message "hashicorp.vagrant.GetTaskRequest" do
      optional :ref, :message, 1, "hashicorp.vagrant.Ref.Operation"
    end
    add_message "hashicorp.vagrant.Task" do
      optional :task, :string, 4
      optional :sequence, :uint64, 5
      optional :id, :string, 6
      optional :status, :message, 7, "hashicorp.vagrant.Status"
      optional :state, :enum, 8, "hashicorp.vagrant.Operation.PhysicalState"
      optional :component, :message, 9, "hashicorp.vagrant.Component"
      map :labels, :string, :string, 10
      optional :job_id, :string, 11
      optional :cli_args, :message, 12, "hashicorp.vagrant.sdk.Command.Arguments"
      optional :command_name, :string, 13
      optional :vagrantfile, :message, 14, "hashicorp.vagrant.Vagrantfile"
      oneof :scope do
        optional :target, :message, 1, "hashicorp.vagrant.sdk.Ref.Target"
        optional :project, :message, 2, "hashicorp.vagrant.sdk.Ref.Project"
        optional :basis, :message, 3, "hashicorp.vagrant.sdk.Ref.Basis"
      end
    end
  end
end

module Hashicorp
  module Vagrant
    GetVersionInfoResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetVersionInfoResponse").msgclass
    VersionInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.VersionInfo").msgclass
    VersionInfo::ProtocolVersion = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.VersionInfo.ProtocolVersion").msgclass
    Vagrantfile = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Vagrantfile").msgclass
    Vagrantfile::Format = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Vagrantfile.Format").enummodule
    Basis = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Basis").msgclass
    Project = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Project").msgclass
    Box = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Box").msgclass
    Target = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Target").msgclass
    Target::Machine = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Target.Machine").msgclass
    Ref = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Ref").msgclass
    Ref::Component = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Ref.Component").msgclass
    Ref::Operation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Ref.Operation").msgclass
    Ref::TargetOperationSeq = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Ref.TargetOperationSeq").msgclass
    Ref::ProjectOperationSeq = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Ref.ProjectOperationSeq").msgclass
    Ref::BasisOperationSeq = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Ref.BasisOperationSeq").msgclass
    Ref::Runner = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Ref.Runner").msgclass
    Ref::RunnerId = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Ref.RunnerId").msgclass
    Ref::RunnerAny = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Ref.RunnerAny").msgclass
    Ref::Vagrantfile = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Ref.Vagrantfile").msgclass
    Component = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Component").msgclass
    Component::Type = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Component.Type").enummodule
    Status = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Status").msgclass
    Status::State = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Status.State").enummodule
    StatusFilter = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.StatusFilter").msgclass
    StatusFilter::Filter = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.StatusFilter.Filter").msgclass
    Operation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Operation").msgclass
    Operation::PhysicalState = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Operation.PhysicalState").enummodule
    OperationOrder = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.OperationOrder").msgclass
    OperationOrder::Order = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.OperationOrder.Order").enummodule
    QueueJobRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.QueueJobRequest").msgclass
    QueueJobResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.QueueJobResponse").msgclass
    CancelJobRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.CancelJobRequest").msgclass
    ValidateJobRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ValidateJobRequest").msgclass
    ValidateJobResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ValidateJobResponse").msgclass
    Job = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Job").msgclass
    Job::Result = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Job.Result").msgclass
    Job::DataSource = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Job.DataSource").msgclass
    Job::Local = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Job.Local").msgclass
    Job::Git = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Job.Git").msgclass
    Job::Noop = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Job.Noop").msgclass
    Job::ValidateOp = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Job.ValidateOp").msgclass
    Job::ValidateResult = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Job.ValidateResult").msgclass
    Job::InitOp = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Job.InitOp").msgclass
    Job::InitResult = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Job.InitResult").msgclass
    Job::Action = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Job.Action").msgclass
    Job::Hook = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Job.Hook").msgclass
    Job::Hook::Location = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Job.Hook.Location").enummodule
    Job::RunOp = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Job.RunOp").msgclass
    Job::RunResult = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Job.RunResult").msgclass
    Job::AuthOp = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Job.AuthOp").msgclass
    Job::AuthResult = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Job.AuthResult").msgclass
    Job::AuthResult::Result = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Job.AuthResult.Result").msgclass
    Job::DocsOp = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Job.DocsOp").msgclass
    Job::DocsResult = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Job.DocsResult").msgclass
    Job::DocsResult::Result = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Job.DocsResult.Result").msgclass
    Job::State = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Job.State").enummodule
    Documentation = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Documentation").msgclass
    Documentation::Field = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Documentation.Field").msgclass
    Documentation::Mapper = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Documentation.Mapper").msgclass
    GetJobRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetJobRequest").msgclass
    ListJobsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ListJobsRequest").msgclass
    ListJobsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ListJobsResponse").msgclass
    GetJobStreamRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetJobStreamRequest").msgclass
    GetJobStreamResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetJobStreamResponse").msgclass
    GetJobStreamResponse::Open = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetJobStreamResponse.Open").msgclass
    GetJobStreamResponse::State = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetJobStreamResponse.State").msgclass
    GetJobStreamResponse::Terminal = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetJobStreamResponse.Terminal").msgclass
    GetJobStreamResponse::Terminal::Event = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetJobStreamResponse.Terminal.Event").msgclass
    GetJobStreamResponse::Terminal::Event::Status = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.Status").msgclass
    GetJobStreamResponse::Terminal::Event::Line = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.Line").msgclass
    GetJobStreamResponse::Terminal::Event::Raw = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.Raw").msgclass
    GetJobStreamResponse::Terminal::Event::NamedValue = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.NamedValue").msgclass
    GetJobStreamResponse::Terminal::Event::NamedValues = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.NamedValues").msgclass
    GetJobStreamResponse::Terminal::Event::TableEntry = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.TableEntry").msgclass
    GetJobStreamResponse::Terminal::Event::TableRow = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.TableRow").msgclass
    GetJobStreamResponse::Terminal::Event::Table = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.Table").msgclass
    GetJobStreamResponse::Terminal::Event::StepGroup = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.StepGroup").msgclass
    GetJobStreamResponse::Terminal::Event::Step = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetJobStreamResponse.Terminal.Event.Step").msgclass
    GetJobStreamResponse::Error = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetJobStreamResponse.Error").msgclass
    GetJobStreamResponse::Complete = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetJobStreamResponse.Complete").msgclass
    Runner = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Runner").msgclass
    RunnerConfigRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.RunnerConfigRequest").msgclass
    RunnerConfigRequest::Open = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.RunnerConfigRequest.Open").msgclass
    RunnerConfigResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.RunnerConfigResponse").msgclass
    RunnerConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.RunnerConfig").msgclass
    RunnerJobStreamRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.RunnerJobStreamRequest").msgclass
    RunnerJobStreamRequest::Request = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.RunnerJobStreamRequest.Request").msgclass
    RunnerJobStreamRequest::Ack = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.RunnerJobStreamRequest.Ack").msgclass
    RunnerJobStreamRequest::Complete = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.RunnerJobStreamRequest.Complete").msgclass
    RunnerJobStreamRequest::Error = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.RunnerJobStreamRequest.Error").msgclass
    RunnerJobStreamRequest::Heartbeat = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.RunnerJobStreamRequest.Heartbeat").msgclass
    RunnerJobStreamResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.RunnerJobStreamResponse").msgclass
    RunnerJobStreamResponse::JobAssignment = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.RunnerJobStreamResponse.JobAssignment").msgclass
    RunnerJobStreamResponse::JobCancel = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.RunnerJobStreamResponse.JobCancel").msgclass
    RunnerGetDeploymentConfigRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.RunnerGetDeploymentConfigRequest").msgclass
    RunnerGetDeploymentConfigResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.RunnerGetDeploymentConfigResponse").msgclass
    GetRunnerRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetRunnerRequest").msgclass
    SetServerConfigRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.SetServerConfigRequest").msgclass
    GetServerConfigResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetServerConfigResponse").msgclass
    ServerConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ServerConfig").msgclass
    ServerConfig::AdvertiseAddr = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ServerConfig.AdvertiseAddr").msgclass
    UpsertBasisRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.UpsertBasisRequest").msgclass
    UpsertBasisResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.UpsertBasisResponse").msgclass
    GetBasisRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetBasisRequest").msgclass
    GetBasisResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetBasisResponse").msgclass
    FindBasisRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.FindBasisRequest").msgclass
    FindBasisResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.FindBasisResponse").msgclass
    ListBasisResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ListBasisResponse").msgclass
    UpsertProjectRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.UpsertProjectRequest").msgclass
    UpsertProjectResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.UpsertProjectResponse").msgclass
    GetProjectRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetProjectRequest").msgclass
    GetProjectResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetProjectResponse").msgclass
    FindProjectRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.FindProjectRequest").msgclass
    FindProjectResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.FindProjectResponse").msgclass
    ListProjectsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ListProjectsResponse").msgclass
    UpsertTargetRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.UpsertTargetRequest").msgclass
    UpsertTargetResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.UpsertTargetResponse").msgclass
    DeleteTargetRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.DeleteTargetRequest").msgclass
    GetTargetRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetTargetRequest").msgclass
    GetTargetResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetTargetResponse").msgclass
    FindTargetRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.FindTargetRequest").msgclass
    FindTargetResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.FindTargetResponse").msgclass
    ListTargetsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ListTargetsResponse").msgclass
    UpsertBoxRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.UpsertBoxRequest").msgclass
    UpsertBoxResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.UpsertBoxResponse").msgclass
    DeleteBoxRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.DeleteBoxRequest").msgclass
    GetBoxRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetBoxRequest").msgclass
    GetBoxResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetBoxResponse").msgclass
    ListBoxesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ListBoxesResponse").msgclass
    FindBoxRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.FindBoxRequest").msgclass
    FindBoxResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.FindBoxResponse").msgclass
    GetLogStreamRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetLogStreamRequest").msgclass
    LogBatch = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.LogBatch").msgclass
    LogBatch::Entry = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.LogBatch.Entry").msgclass
    ConfigVar = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ConfigVar").msgclass
    ConfigSetRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ConfigSetRequest").msgclass
    ConfigSetResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ConfigSetResponse").msgclass
    ConfigGetRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ConfigGetRequest").msgclass
    ConfigGetResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ConfigGetResponse").msgclass
    ExecStreamRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ExecStreamRequest").msgclass
    ExecStreamRequest::Start = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ExecStreamRequest.Start").msgclass
    ExecStreamRequest::Input = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ExecStreamRequest.Input").msgclass
    ExecStreamRequest::PTY = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ExecStreamRequest.PTY").msgclass
    ExecStreamRequest::WindowSize = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ExecStreamRequest.WindowSize").msgclass
    ExecStreamResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ExecStreamResponse").msgclass
    ExecStreamResponse::Open = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ExecStreamResponse.Open").msgclass
    ExecStreamResponse::Exit = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ExecStreamResponse.Exit").msgclass
    ExecStreamResponse::Output = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ExecStreamResponse.Output").msgclass
    ExecStreamResponse::Output::Channel = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ExecStreamResponse.Output.Channel").enummodule
    EntrypointConfigRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.EntrypointConfigRequest").msgclass
    EntrypointConfigResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.EntrypointConfigResponse").msgclass
    EntrypointConfig = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.EntrypointConfig").msgclass
    EntrypointConfig::Exec = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.EntrypointConfig.Exec").msgclass
    EntrypointConfig::URLService = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.EntrypointConfig.URLService").msgclass
    EntrypointLogBatch = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.EntrypointLogBatch").msgclass
    EntrypointExecRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.EntrypointExecRequest").msgclass
    EntrypointExecRequest::Open = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.EntrypointExecRequest.Open").msgclass
    EntrypointExecRequest::Exit = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.EntrypointExecRequest.Exit").msgclass
    EntrypointExecRequest::Output = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.EntrypointExecRequest.Output").msgclass
    EntrypointExecRequest::Output::Channel = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.EntrypointExecRequest.Output.Channel").enummodule
    EntrypointExecRequest::Error = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.EntrypointExecRequest.Error").msgclass
    EntrypointExecResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.EntrypointExecResponse").msgclass
    TokenTransport = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.TokenTransport").msgclass
    Token = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Token").msgclass
    Token::Entrypoint = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Token.Entrypoint").msgclass
    HMACKey = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.HMACKey").msgclass
    InviteTokenRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.InviteTokenRequest").msgclass
    NewTokenResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.NewTokenResponse").msgclass
    ConvertInviteTokenRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ConvertInviteTokenRequest").msgclass
    CreateSnapshotResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.CreateSnapshotResponse").msgclass
    CreateSnapshotResponse::Open = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.CreateSnapshotResponse.Open").msgclass
    RestoreSnapshotRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.RestoreSnapshotRequest").msgclass
    RestoreSnapshotRequest::Open = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.RestoreSnapshotRequest.Open").msgclass
    Snapshot = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Snapshot").msgclass
    Snapshot::Header = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Snapshot.Header").msgclass
    Snapshot::Header::Format = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Snapshot.Header.Format").enummodule
    Snapshot::Trailer = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Snapshot.Trailer").msgclass
    Snapshot::BoltChunk = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Snapshot.BoltChunk").msgclass
    UpsertTaskRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.UpsertTaskRequest").msgclass
    UpsertTaskResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.UpsertTaskResponse").msgclass
    GetLatestTaskRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetLatestTaskRequest").msgclass
    ListTasksRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ListTasksRequest").msgclass
    ListTasksResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.ListTasksResponse").msgclass
    GetTaskRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.GetTaskRequest").msgclass
    Task = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("hashicorp.vagrant.Task").msgclass
  end
end
