#!/usr/bin/env bash

rvm --version || {
  echo 'rvm not installed' >&2
  exit 1
}

# # Install basic dependencies and RVM
# apt-get install -qy build-essential bsdtar rvm
if ! bsdtar --version
then
  apt-get install -y bsdtar &&
    bsdtar --version || {
      echo 'Failed to install bsdtar' >&2
      exit 1
    }
fi

# sudo -i -u vagrant gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3

# # Import the mpapis public key to verify downloaded releases
# su -l -c 'gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3' vagrant

# # Install next-to-last Ruby that complies with Vagrant's version constraint
# RUBY_VER=$(su -l -c 'rvm list known' vagrant | tr '[]-' ' ' | awk "/^ ruby  ${RUBY_VER_REQ:0:1}\./ { print \$2 }" | sort -r | sed -n '2p')
# su -l -c "rvm install ${RUBY_VER}" vagrant
# su -l -c "rvm --default use ${RUBY_VER}" vagrant
RUBY_VER_REQ=$(awk '$1 == "s.required_ruby_version" { print $4 }' /vagrant/vagrant.gemspec | tr -d '"')
RUBY_VER=$(sudo -u vagrant -i rvm list known |
             tr '[]-' ' ' |
             awk "/^ ruby  ${RUBY_VER_REQ:0:1}\./ { print \$2 }" |
             sort -r |
             sed -n '2p')
sudo -u vagrant -i rvm install "${RUBY_VER}"
sudo -u vagrant -i rvm --default use "${RUBY_VER}"

# # Output the Ruby version (for sanity)
# su -l -c 'ruby --version' vagrant
sudo -u vagrant -i ruby --version

# # Install Git
# apt-get install -qy git

# # Upgrade Rubygems
# su -l -c "rvm ${RUBY_VER} do gem update --system" vagrant
sudo -u vagrant -i rvm "${RUBY_VER}" do gem update --system

# # Prepare to run unit tests
# su -l -c 'cd /vagrant; bundle install' vagrant
sudo -u vagrant -i bash -c 'cd /vagrant; bundle install' 

# # Automatically move into the shared folder, but only add the command
# # if it's not already there.
# grep -q 'cd /vagrant' /home/vagrant/.bash_profile 2>/dev/null || echo 'cd /vagrant' >> /home/vagrant/.bash_profile
if ! grep -q 'cd /vagrant' /home/vagrant/.bash_profile
then
  cat <<EOF >> /home/vagrant/.bash_profile
cd /vagrant
EOF
fi
# # Touch the marker file so we don't do this again
# touch ${MARKER_FILE}
