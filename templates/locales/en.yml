en:
  vagrant:
    general:
      moving_home_dir: "Moving old Vagrant home directory to new location: %{directory}"
      home_dir_migration_failed: |-
        Both an old and new Vagrant home directory exist. Only the new one will
        be used. Please merge the old directory into the new directory if you'd
        like to use the old data as well.

        Old: %{old}
        New: %{new}

#-------------------------------------------------------------------------------
# Translations for exception classes
#-------------------------------------------------------------------------------
    errors:
      base_vm_not_found: The base VM with the name '%{name}' was not found.
      box_not_found: Box '%{name}' could not be found.
      cli_invalid_options: |-
        An invalid option was specified. The help for this command
        is available below.

        %{help}
      cli_invalid_usage: |-
        This command was not invoked properly. The help for this command is
        available below.

        %{help}
      config_validation: |-
        There was a problem with the configuration of Vagrant. The error message(s)
        are printed below:

        %{messages}
      deprecation: |-
        You are using a feature that has been removed in this version. Explanation:

        %{message}
        Note that this error message will not appear in the next version of Vagrant.
      destroy_requires_force: |-
        Destroy doesn't have a TTY to ask for confirmation. Please pass the
        `--force` flag to force a destroy, otherwise attach a TTY so that
        the destroy can be confirmed.
      dotfile_is_directory: |-
        The local file Vagrant uses to store data ".vagrant" already exists
        and is a directory! If you are in your home directory, then please run
        this command in another directory. If you aren't in a home directory,
        then please rename ".vagrant" to something else, or configure Vagrant
        to use another filename by modifying `config.vagrant.dotfile_name`.
      environment_locked: |-
        An instance of Vagrant is already running. Only one instance of Vagrant
        may run at any given time to avoid problems with VirtualBox inconsistencies
        occurring. Please wait for the other instance of Vagrant to end and then
        try again.
      gem_command_in_bundler: |-
        You cannot run the `vagrant gem` command while in a bundler environment.
        Bundler messes around quite a bit with the RubyGem load paths and gems
        installed via `vagrant gem` are excluded by Bundler.

        Instead, please include your Vagrant plugins in your Gemfile itself.
      guest:
        invalid_class: |-
          The specified guest class does not inherit from `Vagrant::Guest::Base`.
          The specified guest class must inherit from this class.

          The specified guest class was: %{guest}
        unknown_type: |-
          The specified guest type is unknown: %{guest}. Please change this
          to a proper value.
        unspecified: |-
          A VM guest type must be specified! This is done via the `config.vm.guest`
          configuration value. Please read the documentation online for more information.
      home_dir_not_accessible: |-
        The home directory you specified is not accessible. The home
        directory that Vagrant uses must be both readable and writable.

        You specified: %{home_path}
      interrupted: |-
        Vagrant exited after cleanup due to external interrupt.
      multi_vm_required: |-
        A multi-vm environment is required for name specification to this command.
      multi_vm_target_required: |-
        This command requires a specific VM name to target in a multi-VM environment.
      no_env: |-
        A Vagrant environment is required to run this command. Run `vagrant init`
        to set one up.
      port_collision_resume: |-
        This VM cannot be resumed, because the forwarded ports would collide with
        another running virtual machine. Normally, Vagrant will attempt to fix this
        for you but VirtualBox only allows forwarded ports to change if the VM is
        powered off. Therefore, please reload your VM or halt the other running
        VMs to continue.
      scp_unavailable: |-
        SSH server on the guest doesn't support SCP. Please install the necessary
        software to enable SCP on your guest operating system.
      shared_folder_create_failed: |-
        Failed to create the following shared folder on the host system. This is
        usually because Vagrant does not have sufficient permissions to create
        the folder.

        %{path}

        Please create the folder manually or specify another path to share.
      ssh_authentication_failed: |-
        SSH authentication failed! This is typically caused by the public/private
        keypair for the SSH user not being properly set on the guest VM. Please
        verify that the guest VM is setup with the proper public key, and that
        the private key path for Vagrant is setup properly as well.
      ssh_bad_exit_status: |-
        The following SSH command responded with a non-zero exit status.
        Vagrant assumes that this means the command failed!

        %{command}
      ssh_connection_refused: |-
        SSH connection was refused! This usually happens if the VM failed to
        boot properly. Some steps to try to fix this: First, try reloading your
        VM with `vagrant reload`, since a simple restart sometimes fixes things.
        If that doesn't work, destroy your VM and recreate it with a `vagrant destroy`
        followed by a `vagrant up`. If that doesn't work, contact a Vagrant
        maintainer (support channels listed on the website) for more assistance.
      ssh_connection_timeout: |-
        Vagrant timed out while attempting to connect via SSH. This usually
        means that the VM booted, but there are issues with the SSH configuration
        or network connectivity issues. Please try to `vagrant reload` or
        `vagrant up` again.
      ssh_key_bad_permissions: |-
        The private key to connect to this box via SSH has invalid permissions
        set on it. The permissions of the private key should be set to 0600, otherwise SSH will
        ignore the key. Vagrant tried to do this automatically for you but failed. Please set the
        permissions on the following file to 0600 and then try running this command again:

        %{key_path}
      ssh_key_type_not_supported: |-
        The private key you're attempting to use with this Vagrant box uses
        an unsupported encryption type. The SSH library Vagrant uses does not support
        this key type. Please use `ssh-rsa` or `ssh-dss` instead.
      ssh_port_not_detected: |-
        Vagrant couldn't determine the SSH port for your VM! Vagrant attempts to
        automatically find a forwarded port that matches your `config.ssh.guest_port`
        (default: 22) value and uses this for SSH. Alternatively, if `config.ssh.port`
        is set, it will use this.

        However, in this case Vagrant was unable to find a forwarded port that matches
        the guest port and `config.ssh.port` is not set!

        Please make sure that you have a forwarded port that goes to the configured
        guest port value, or specify an explicit SSH port with `config.ssh.port`.
      ssh_unavailable: "`ssh` binary could not be found. Is an SSH client installed?"
      ssh_unavailable_windows: |-
        `vagrant ssh` isn't available on the Windows platform. You are still able
        to SSH into the virtual machine if you get a Windows SSH client (such as
        PuTTY). The authentication information is shown below:

        Host: %{host}
        Port: %{port}
        Username: %{username}
        Private key: %{key_path}
      ui_expects_tty: |-
        Vagrant is attempting to interface with the UI in a way that requires
        a TTY. Most actions in Vagrant that require a TTY have configuration
        switches to disable this requirement. Please do that or run Vagrant
        with TTY.
      vagrantfile_exists: |-
        `Vagrantfile` already exists in this directory. Remove it before
        running `vagrant init`.
      vagrantfile_syntax_error: |-
        There is a syntax error in the following Vagrantfile. The syntax error
        message is reproduced below for convenience:

        %{file}
      vboxmanage_error: |-
        There was an error executing the following command with VBoxManage:

        %{command}

        For more information on the failure, enable detailed logging with
        VAGRANT_LOG.
      virtualbox_invalid_version: |-
        Vagrant has detected that you have a version of VirtualBox installed
        that is not supported. Please install one of the supported versions
        listed below to use Vagrant:

        %{supported_versions}
      virtualbox_kernel_module_not_loaded: |-
        VirtualBox is complaining that the kernel module is not loaded. Please
        run `VBoxManage --version` to see the error message which should contain
        instructions on how to fix this error.
      virtualbox_install_incomplete: |-
        VirtualBox is complaining that the installation is incomplete. Please
        run `VBoxManage --version` to see the error message which should contain
        instructions on how to fix this error.
      virtualbox_not_detected: |-
        Vagrant could not detect VirtualBox! Make sure VirtualBox is properly installed.
        Vagrant uses the `VBoxManage` binary that ships with VirtualBox, and requires
        this to be available on the PATH. If VirtualBox is installed, please find the
        `VBoxManage` binary and add it to the PATH environmental variable.
      vm_creation_required: |-
        VM must be created before running this command. Run `vagrant up` first.
      vm_inaccessible: |-
        Your VM has become "inaccessible." Unfortunately, this is a critical error
        with VirtualBox that Vagrant can not cleanly recover from. Please open VirtualBox
        and clear out your inaccessible virtual machines or find a way to fix
        them.
      vm_no_match: |-
        No virtual machines matched the regular expression given.
      vm_not_found: |-
        A VM by the name of %{name} was not found.
      vm_not_running: |-
        VM must be running to open SSH connection. Run `vagrant up`
        to start the virtual machine.

#-------------------------------------------------------------------------------
# Translations for config validation errors
#-------------------------------------------------------------------------------
    config:
      common:
        error_empty: "`%{field}` must be filled in."
      chef:
        cookbooks_path_empty: "Must specify a cookbooks path for chef solo."
        run_list_empty: "Run list must not be empty."
        server_url_empty: "Chef server URL must be populated."
        vagrant_as_json_key: |-
          `vagrant` cannot be a JSON key, because it is used by Vagrant already.
        validation_key_path: "Validation key path must be valid path to your chef server validation key."
      ssh:
        private_key_missing: "`private_key_path` file must exist: %{path}"
      vm:
        base_mac_invalid: "Base MAC address for eth0/NAT must be set. Contact box maintainer for more information."
        boot_mode_invalid: "Boot mode must be one of: headless or gui"
        box_missing: "A box must be specified."
        box_not_found: "The box '%{name}' could not be found."
        network_invalid: |-
          The network type '%{type}' is not valid. Please use
          'hostonly' or 'bridged'.
        network_ip_required: |-
          Host only networks require an IP as an argument.
        network_ip_invalid: |-
          The host only network IP '%{ip}' is invalid.
        network_ip_ends_one: |-
          The host only network IP '%{ip}' must not end in a 1, as this
          is reserved for the host machine.
        shared_folder_hostpath_missing: "Shared folder host path for '%{name}' doesn't exist: %{path}"
        shared_folder_nfs_owner_group: |-
          Shared folder '%{name}': NFS does not support the owner/group settings.
        provisioner_not_found: "The provisioner '%{shortcut}' doesn't exist."
        provisioner_invalid_class: "The provisioner '%{shortcut}' must inherit from `Vagrant::Provisioners::Base`."

#-------------------------------------------------------------------------------
# Translations for commands. e.g. `vagrant x`
#-------------------------------------------------------------------------------
    commands:
      common:
        vm_not_created: "VM not created. Moving on..."
        vm_not_running: "VM is not currently running. Please bring it up to run this command."
      box:
        no_installed_boxes: "There are no installed boxes! Use `vagrant box add` to add some."
      destroy:
        confirmation: "Are you sure you want to destroy the '%{name}' VM? [Y/N] "
        will_not_destroy: |-
          The VM '%{name}' will not be destroyed, since the confirmation
          was declined.
      gem:
        help_preamble: |-
          `vagrant gem` is used to install Vagrant plugins via the RubyGems
          system. In fact, `vagrant gem` is just a frontend to the actual `gem`
          interface, with the difference being that Vagrant sets up a custom
          directory where gems are installed so that they are isolated from your
          system gems.
      init:
        success: |-
          A `Vagrantfile` has been placed in this directory. You are now
          ready to `vagrant up` your first virtual environment! Please read
          the comments in the Vagrantfile as well as documentation on
          `vagrantup.com` for more information on using Vagrant.
      status:
        aborted: |-
          The VM is in an aborted state. This means that it was abruptly
          stopped without properly closing the session. Run `vagrant up`
          to resume this virtual machine. If any problems persist, you may
          have to destroy and restart the virtual machine.
        gurumeditation: |-
          The VM is in the "guru meditation" state. This is a rare case which means
          that an internal error in VitualBox caused the VM to fail. This is always
          the sign of a bug in VirtualBox. You can try to bring your VM back online
          with a `vagrant up`.
        inaccessible: |-
          The VM is inaccessible! This is a rare case which means that VirtualBox
          can't find your VM configuration. This usually happens when upgrading
          VirtualBox, moving to a new computer, etc. Please consult VirtualBox
          for how to handle this issue.
        output: |-
          Current VM states:

          %{states}

          %{message}
        not_created: |-
          The environment has not yet been created. Run `vagrant up` to
          create the environment.
        paused: |-
          The VM is paused. This VM may have been paused via the VirtualBox
          GUI or the VBoxManage command line interface. To unpause, please
          use the VirtualBox GUI and/or VBoxManage command line interface so
          that vagrant would be able to control the VM again.
        poweroff: |-
          The VM is powered off. To restart the VM, simply run `vagrant up`
        running: |-
          The VM is running. To stop this VM, you can run `vagrant halt` to
          shut it down forcefully, or you can run `vagrant suspend` to simply
          suspend the virtual machine. In either case, to restart it again,
          simply run `vagrant up`.
        saved: |-
          To resume this VM, simply run `vagrant up`.
        stuck: |-
          The VM is "stuck!" This is a very rare state which means that
          VirtualBox is unable to recover the current state of the VM.
          The only known solution to this problem is to restart your
          machine, sorry.
        listing: |-
          This environment represents multiple VMs. The VMs are all listed
          above with their current state. For more information about a specific
          VM, run `vagrant status NAME`.
      up:
        vm_created: "VM already created. Booting if it's not already running..."
      version:
        output: "Vagrant version %{version}"

#-------------------------------------------------------------------------------
# Translations for Vagrant middleware acions
#-------------------------------------------------------------------------------
    actions:
      runner:
        waiting_cleanup: "Waiting for cleanup before exiting..."
        exit_immediately: "Exiting immediately, without cleanup!"
      vm:
        boot:
          booting: Booting VM...
          waiting: Waiting for VM to boot. This can take a few minutes.
          ready: VM booted and ready for use!
          failed: Failed to connect to VM!
          failed_to_boot: |-
            Failed to connect to VM via SSH. Please verify the VM successfully booted
            by looking at the VirtualBox GUI.
          failed_to_run: |-
            The VM failed to remain in the "running" state while attempting to boot.
            This is normally caused by a misconfiguration or host system incompatibilities.
            Please open the VirtualBox GUI and attempt to boot the virtual machine
            manually to get a more informative error message.
        bridged_networking:
          available: |-
            Available bridged network interfaces:
          bridging: |-
            Bridging adapter #%{adapter} to '%{bridge}'
          enabling: |-
            Enabling bridged network...
          preparing: |-
            Preparing bridged networking...
          specific_not_found: |-
            Specific bridge '%{bridge}' not found. You may be asked to specify
            which network to bridge to.
        check_box:
          not_found: Box %{name} was not found. Fetching box from specified URL...
          not_specified: |-
            No base box was specified! A base box is required as a staring point
            for every vagrant virtual machine. Please specify one in your Vagrantfile
            using `config.vm.box`
          does_not_exist: |-
            Specified box `%{name}` does not exist!

            The box must be added through the `vagrant box add` command. Please view
            the documentation associated with the command for more information.
        check_guest_additions:
          not_detected: |-
            No guest additions were detected on the base box for this VM! Guest
            additions are required for forwarded ports, shared folders, host only
            networking, and more. If SSH fails on this machine, please install
            the guest additions and repackage the box to continue.

            This is not an error message; everything may continue to work properly,
            in which case you may ignore this message.
          version_mismatch: |-
            The guest additions on this VM do not match the install version of
            VirtualBox! This may cause things such as forwarded ports, shared
            folders, and more to not work properly. If any of those things fail on
            this machine, please update the guest additions and repackage the
            box.

            Guest Additions Version: %{guest_version}
            VirtualBox Version: %{virtualbox_version}
        clear_forward_ports:
          deleting: Clearing any previously set forwarded ports...
        clear_network_interfaces:
          deleting: Clearing any previously set network interfaces...
        clear_shared_folders:
          deleting: Cleaning previously set shared folders...
        customize:
          failure: |-
            A customization command failed:

            %{command}

            The following error was experienced:

            %{error}

            Please fix this customization and try again.
          running: Running any VM customizations...
        destroy:
          destroying: Destroying VM and associated drives...
        destroy_network:
          destroying: Destroying unused networking interface...
        disable_networks:
          disabling: Disabling host only networks...
        discard_state:
          discarding: Discarding saved state of VM...
        export:
          create_dir: Creating temporary directory for export...
          exporting: Exporting VM...
          power_off: "The Vagrant virtual environment you are trying to package must be powered off."
        forward_ports:
          auto_empty: |-
            Vagrant found a port collision for the specified port and virtual machine.
            While this port was marked to be auto-corrected, the ports in the
            auto-correction range are all also used.

            VM: %{vm_name}
            Forwarded port: %{guest_port} => %{host_port}
          collision_error: |-
            Vagrant cannot forward the specified ports on this VM, since they
            would collide with another VirtualBox virtual machine's forwarded
            ports! The forwarded port to %{host_port} is already in use on the host
            machine.

            To fix this, modify your current projects Vagrantfile to use another
            port. Example, where '1234' would be replaced by a unique host port:

              config.vm.forward_port %{guest_port}, 1234

          fixed_collision: |-
            Fixed port collision for %{guest_port} => %{host_port}. Now on port %{new_port}.
          forwarding: Forwarding ports...
          forwarding_entry: |-
            -- %{guest_port} => %{host_port} (adapter %{adapter})
          non_nat: |-
            VirtualBox adapter #%{adapter} not configured as "NAT". Skipping port
            forwards on this adapter.
          privileged_ports: |-
            You are trying to forward to privileged ports (ports <= 1024). Most
            operating systems restrict this to only privileged process (typically
            processes running as an administrative user). This is a warning in case
            the port forwarding doesn't work. If any problems occur, please try a
            port higher than 1024.
        halt:
          force: |-
            Forcing shutdown of VM...
          graceful: |-
            Attempting graceful shutdown of VM...
        host_name:
          setting: "Setting host name..."
        import:
          importing: Importing base box '%{name}'...
          failure: |-
            The VM import failed! Try running `VBoxManage import` on the box file
            manually for more verbose error output.
        match_mac:
          matching: Matching MAC address for NAT networking...
          no_base_mac: |-
            No base MAC address was specified. This is required for the NAT networking
            to work properly (and hence port forwarding, SSH, etc.). Specifying this
            MAC address is typically up to the box and box maintiner. Please contact
            the relevant person to solve this issue.
        network:
          adapter_collision: |-
            More than one network have been assigned to the same adapter. Please
            make sure your networks you've configured in your Vagrantfile do not
            overlap.
          configuring: |-
            Configuring and enabling network interfaces...
          dhcp_already_attached: |-
            A host only network interface you're attempting to configure via DHCP
            already has a conflicting host only adapter with DHCP enabled. The
            DHCP on this adapter is incompatible with the DHCP settings. Two
            host only network interfaces are not allowed to overlap, and each
            host only network interface can have only one DHCP server. Please
            reconfigure your host only network or remove the virtual machine
            using the other host only network.
          no_adapters: |-
            No available adapters on the virtual machine were found to accomodate
            for all configured networks. VirtualBox virtual machines have 8
            network interfaces available usually, so please lower the number of
            networks to below 8.
          preparing: |-
            Preparing network interfaces based on configuration...
        host_only_network:
          collides: |-
            The specified host network collides with a non-hostonly network!
            This will cause your specified IP to be inaccessible. Please change
            the IP or name of your host only network to not match that of
            a bridged or non-hostonly network.
          creating: "Creating new host only network for environment..."
          enabling: "Enabling host only network..."
          not_found: |-
            The specified host network could not be found: '%{name}.'
            If the name specification is removed, Vagrant will create a new
            host only network for you. Alternatively, please create the
            specified network manually.
          preparing: "Preparing host only network..."
        nfs:
          host_required: |-
            A host class is required for NFS shared folders. By default, these
            are auto-detected, but can be overridden with `config.vagrant.host`.
            There is currently no host class loaded.
          no_host_network: |-
            NFS shared folders requires that host only networking is enabled
            with a static IP. Please enable host only network and assign a
            static IP via `config.vm.network`.
          not_supported: |-
            The host class is reporting that NFS is not supported by this host,
            or `nfsd` may not be installed. Please verify that `nfsd` is installed
            on your machine, and retry.
          exporting: Exporting NFS shared folders...
          mounting: Mounting NFS shared folders...
        persist:
          dotfile_error: |-
            The dotfile which Vagrant uses to store the UUID of the project's
            virtual machine already exists and is not a file! The dotfile is
            currently configured to be '%{dotfile_path}'

            To change this value, please see `config.vagrant.dotfile_name`

            Are you trying to use Vagrant from your home directory? This is the
            leading cause of this error message. To resolve this, simply use a
            different directory. Or, if you really want to run Vagrant from your
            home directory, modify the `config.vagrant.dotfile_name` configuration
            key.
          persisting: "Persisting the VM UUID (%{uuid})..."
        provision:
          beginning: "Running provisioner: %{provisioner}..."
        resume:
          resuming: Resuming suspended VM...
        share_folders:
          creating: Creating shared folders metadata...
          mounting: Mounting shared folders...
          mounting_entry: "-- %{name}: %{guest_path}"
          nomount_entry: "-- %{name}: Automounting disabled."
        suspend:
          suspending: Saving VM state and suspending execution...

      box:
        destroy:
          destroying: "Deleting box '%{name}'..."
        download:
          with: "Downloading with %{class}..."
          cleaning: "Cleaning up downloaded box..."
          unknown_type: "Unknown or unsupported URI type given for box download."
        unpackage:
          extracting: "Extracting box..."
          already_exists: |-
            A box already exists under the name of '%{name}'. This may or may
            not be the same box you are trying to add. Please use another name
            or remove the previous box then try to add it again.
          untar_failure: |-
            Failed to untar the box file. This is usually because you're
            attempting to add a box that isn't a valid box file. Please
            double check that the box file is properly packaged.
        verify:
          verifying: "Verifying box..."
          failed: |-
            The box file you're attempting to add is invalid. This can be
            commonly attributed to typos in the path given to the box add
            command. Another common case of this is invalid packaging of the
            box itself.

      general:
        package:
          packaging: "Packaging additional file: %{file}"
          compressing: "Compressing package to: %{tar_path}"
          output_exists: |-
            The specified file to save the package as already exists. Please
            remove this file or specify a different file name for outputting.
          output_is_directory: |-
            The specified output is a directory. Please specify a path including
            a filename.
          requires_directory: |-
            A directory was not specified to package. This should never happen
            and is a result of an internal inconsistency.
          include_file_missing: |-
            Package include file doesn't exist: %{file}

    downloaders:
      file:
        download: "Copying box to temporary location..."
        file_missing: "The specified path to a file doesn't exist."
      http:
        connection_timeout: |-
          Vagrant timed out while attempting to connect to the HTTP host.
          Please check your internet and proxy settings and try again.
        download: "Downloading box: %{url}"
        socket_error: |-
          An error occurred while trying to download the specified box. This most
          often happens if there is no internet connection or the address is
          invalid.
        status_error: |-
          Bad status code: %{status}

          Please verify that the box exists and is accessible. Also verify that
          this computer is properly connected to the internet.

    hosts:
      bsd:
        nfs_export: |-
          Preparing to edit /etc/exports. Administrator privileges will be required...
        nfs_prune: |-
          Pruning invalid NFS exports. Administrator privileges will be required...
      linux:
        nfs_export: |-
          Preparing to edit /etc/exports. Administrator privileges will be required...
        nfs_prune: |-
          Pruning invalid NFS exports. Administrator privileges will be required...
      arch:
        nfs_export:
          prepare: "Preparing to edit /etc/exports. Administrator privileges will be required..."
      freebsd:
        nfs_whitespace: |-
          FreeBSD hosts do not support sharing directories with whitespace in
          their path. Please adjust your path accordingly.

    provisioners:
      chef:
        chef_not_detected: |-
          The chef binary (either `chef-solo` or `chef-client`) was not found on
          the VM and is required for chef provisioning. Please verify that chef
          is installed and that the binary is available on the PATH.
        json: "Generating chef JSON and uploading..."
        client_key_folder: "Creating folder to hold client key..."
        upload_validation_key: "Uploading chef client validation key..."
        upload_encrypted_data_bag_secret_key: "Uploading chef encrypted data bag secret key..."
        running_client: "Running chef-client..."
        running_client_again: "Running chef-client again (failed to converge)..."
        running_solo: "Running chef-solo..."
        running_solo_again: "Running chef-solo again (failed to converge)..."
        invalid_provisioner: |-
          Vagrant::Provisioners::Chef is not a valid provisioner! Use
          ChefSolo or ChefClient instead.
        missing_shared_folders: |-
          Shared folders that Chef requires are missing on the virtual machine.
          This is usually due to configuration changing after already booting the
          machine. The fix is to run a `vagrant reload` so that the proper shared
          folders will prepared and mounted on the VM.
        no_convergence: |-
          Chef never successfully completed! Any errors should be visible in the
          output above. Please fix your recipes so that they properly complete.
        not_detected: |-
          The `%{binary}` binary appears to not be in the PATH of the guest. This
          could be because the PATH is not properly setup or perhaps chef is not
          installed on this guest. Chef provisioning can not continue without
          chef properly installed.
        server_url_required: |-
          Chef server provisioning requires that the `config.chef.chef_server_url` be set to the
          URL of your chef server. Examples include "http://12.12.12.12:4000" and
          "http://myserver.com:4000" (the port of course can be different, but 4000 is the default)
        server_validation_key_required: |-
          Chef server provisioning requires that the `config.chef.validation_key_path` configuration
          be set to a path on your local machine of the validation key used to register the
          VM with the chef server.
        server_validation_key_doesnt_exist: |-
          The validation key set for `config.chef.validation_key_path` does not exist! This
          file needs to exist so it can be uploaded to the virtual machine.

      puppet:
        not_detected: |-
          The `%{binary}` binary appears to not be in the PATH of the guest. This
          could be because the PATH is not properly setup or perhaps Puppet is not
          installed on this guest. Puppet provisioning can not continue without
          Puppet properly installed.
        running_puppet: "Running Puppet with %{manifest}..."
        manifest_missing: |-
          The configured Puppet manifest is missing. Please specify a path to an
          existing manifest:

          %{manifest}
        manifests_path_missing: "The manifests path specified for Puppet does not exist: %{path}"
        missing_shared_folders: |-
          Shared folders that Puppet requires are missing on the virtual machine.
          This is usually due to configuration changing after already booting the
          machine. The fix is to run a `vagrant reload` so that the proper shared
          folders will prepared and mounted on the VM.
        module_path_missing: "The configured module path doesn't exist: %{path}"

      puppet_server:
        not_detected: |-
          The `%{binary}` binary appears to not be in the PATH of the guest. This
          could be because the PATH is not properly setup or perhaps Puppet is not
          installed on this guest. Puppet provisioning can not continue without
          Puppet properly installed.
        running_puppetd: "Running Puppet agent..."
        cert_requires_node: |-
          Certificate and private key provisioning require `config.puppet_server.puppet_node` to
          be set.
        cert_and_key: |-
          Both `config.puppet_server.client_certificate(_path)` and
          `config.puppet_server.client_private_key(_path)` need to be defined or none should be.
        cert_inline_and_path_clash: |-
          `config.puppet_server.client_certificate` and
          `config.puppet_server.client_certificate_path` are exclusive; Only one
          of them should be defined.
        key_inline_and_path_clash: |-
          `config.puppet_server.client_private_key` and
          `config.puppet_server.client_private_key_path` are exclusive; Only one
          of them should be defined.
        upload_client_private_key: "Uploading Puppet client private key..."
        upload_client_certificate: "Uploading Puppet client certificate..."
        setting_up_ssl: "Setting up the Puppet client's SSL environment..."

      shell:
        args_not_string: "Shell provisioner `args` must be a string."
        path_and_inline_set: "Only one of `path` or `inline` may be set."
        no_path_or_inline: "One of `path` or `inline` must be set."
        path_invalid: "`path` for shell provisioner does not exist on the host system: %{path}"
        upload_path_not_set: "`upload_path` must be set for the shell provisioner."

    guest:
      base:
        unsupported_configure_networks: |-
          Networking features require support that is dependent on the operating
          system running within the guest virtual machine. Vagrant has built-in support
          for many operating systems: Debian, Ubuntu, Gentoo, and RedHat. The distro
          of your VM couldn't be detected or doesn't support networking features.

          Most of the time this is simply due to the fact that no one has contributed
          back the logic necessary to set this up. Please report a bug as well as the
          box you're using.
        unsupported_host_name: |-
          Setting host name is currently only supported on Debian, Ubuntu and RedHat.
          If you'd like your guest OS to be supported, please open a ticket on the
          project.
        unsupported_nfs: |-
          Vagrant doesn't support mounting NFS shared folders for your specific
          guest operating system yet, or possibly couldn't properly detect the
          operating system on the VM.

          Most of the time this is simply due to the fact that no one has contributed
          back the logic necessary to set this up. Please report a bug as well as the
          box you're using.
        unsupported_halt: |-
          Vagrant doesn't support graceful shutdowns for your specific
          guest operating system yet, or possibly couldn't properly detect the
          operating system on the VM.

          Most of the time this is simply due to the fact that no one has contributed
          back the logic necessary to set this up. Please report a bug as well as the
          box you're using.
        unsupported_shared_folder: |-
          Vagrant doesn't support mounting shared folders for your specific
          guest operating system yet, or possibly couldn't properly detect the
          operating system on the VM.

          Most of the time this is simply due to the fact that no one has contributed
          back the logic necessary to set this up. Please report a bug as well as the
          box you're using.
      linux:
        guestpath_expand_fail: |-
          Vagrant failed to determine the shell expansion of the guest path
          for one of your shared folders. This is an extremely rare error case
          and most likely indicates an unusual configuration of the guest system.
          Please report a bug with your Vagrantfile.
        mount_fail: "Failed to mount shared folders. `vboxsf` was not available."
        mount_nfs_fail: |-
          Mounting NFS shared folders failed. This is most often caused by the NFS
          client software not being installed on the guest machine. Please verify
          that the NFS client software is properly installed, and consult any resources
          specific to the linux distro you're using for more information on how to
          do this.
